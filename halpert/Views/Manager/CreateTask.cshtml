@model halpert.ViewModels.CreateTaskVM

@{
    ViewBag.Title = "CreateTask";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.ProjectName</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Create task</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.DeveloperId, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @* Value , Text, *@
            @Html.DropDownListFor(m => m.DeveloperId, new SelectList(Model.Developers, "Id", "Email"),
                "Assign to:", new { @class = "form-control" })

            @Html.ValidationMessageFor(model => model.DeveloperId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PreTasksIds, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @* Value , Text, *@
            @Html.DropDownListFor(m => m.PreTasksIds, new SelectList(Model.PreTasks, "Id", "Name"),
                "Nothing", new { @class = "form-control", multiple = "multiple", @id = "drop_down" })

            @Html.ValidationMessageFor(model => model.PreTasksIds, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.StartTime, new { @type = "date", @class = "form-control", @Value = "", @id = "start_date" })
            @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            <span id="hint" class="text-muted">start time will automatically calculated.</span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Details, new { @class = "form-control", @rows = "10", @style = "max-width:50% !important;" })
            @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
        </div>
    </div>


    @Html.HiddenFor(m => m.ProjectId)
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}


<div>
    @Html.ActionLink("Cancel", "ProjectDetails", new { id = Model.ProjectId })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>

    var dropDown = document.getElementById("drop_down");
    var startDate = document.getElementById("start_date");
    var hint = document.getElementById("hint");
    hint.style.visibility = "hidden";

    dropDown.onchange = function onChange() {
        var option_value = dropDown.options[dropDown.selectedIndex].text;
        if (option_value != "Nothing") {
            startDate.disabled = true;
            hint.style.visibility = "visible";
        } else {
            startDate.disabled = false;
            hint.style.visibility = "hidden";
        }

    }

</script>